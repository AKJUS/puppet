#!/bin/bash
URL="$1"
DESC="$2"
STATE="$3"
CA=${DESC##* }

if [[ $CA = "LetsEncrypt" ]]
then
	case $STATE in
		OK)
			# It's all good
			;;
		UNKNOWN)
			# We can't do anything about this really
			;;
		WARNING)
			# Lets Renew here
			git config --global core.sshCommand "ssh -i /var/lib/nagios/id_rsa -F /dev/null"
			if [ ! -d /srv/ssl/ssl/ ]; then
				cd /srv/ssl/ && git clone git@github.com:miraheze/ssl.git
			else
			        cd /srv/ssl/ssl && git pull
			fi
			git -C /srv/ssl/ssl/ config user.email "noreply@miraheze.org"
			git -C /srv/ssl/ssl/ config user.name "MirahezeSSLBot"
			sudo /root/ssl-certificate -r $URL > /srv/ssl/ssl/certificates/$URL.crt
			sed '/Re-generating a new SSL cert for $URL/d' /srv/ssl/ssl/certificates/$URL.crt
			sed '/LetsEncrypt certificate at: /root/ssl/$URL.crt/d' /srv/ssl/ssl/certificates/$URL.crt
			git -C /srv/ssl/ssl add /srv/ssl/ssl/certificates/$URL.crt
			git -C /srv/ssl/ssl/ commit -m "Bot: Update SSL cert for ${URL}"
			git -C /srv/ssl/ssl/ push origin master
			;;
		CRITICAL)
			# If the above failed, let's not act here. CRITICAL is human intervention time
			echo "CRITICAL - FAIL SAFE"
			;;
	esac
else
	echo "Not LetsEncrypt"
fi
exit 0
