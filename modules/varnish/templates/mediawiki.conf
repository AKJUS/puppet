server {
	listen 80 deferred;
	listen [::]:80 deferred ipv6only=on;
	
	server_name ~.;
	
	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl http2 deferred;
	listen [::]:443 ssl http2 deferred ipv6only=on;
	
	server_name miraheze.org *.miraheze.org;
	root /var/www/html;
	
	ssl_certificate /etc/ssl/certs/wildcard.miraheze.org.crt;
	ssl_certificate_key /etc/ssl/private/wildcard.miraheze.org.key;
	
	ssl_trusted_certificate /etc/ssl/certs/GlobalSign.crt;
	ssl_stapling_verify on;
	
	location / {
		proxy_pass http://127.0.0.1:81;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	
	server_name allthetropes.org www.allthetropes.org;
	root /var/www/html;
	
	ssl_certificate /etc/ssl/certs/allthetropes.org.crt;
	ssl_certificate_key /etc/ssl/private/allthetropes.org.key;
	
	ssl_trusted_certificate /etc/ssl/certs/LetsEncrypt.crt;
	
	location / {
		proxy_pass http://127.0.0.1:81;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
}

server {
	listen 80;
	listen [::]:80;

	server_name www.boulderwiki.org;

	return 301 https://boulderwiki.org$request_uri;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	
	server_name secure.reviwiki.info;
	root /var/www/html;
	
	ssl_certificate /etc/ssl/certs/secure.reviwiki.info.crt;
	ssl_certificate_key /etc/ssl/private/secure.reviwiki.info.key;
	
	ssl_trusted_certificate /etc/ssl/certs/StartSSL.crt;
	
	location / {
		proxy_pass http://127.0.0.1:81;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
}

server {
	listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name www.wikiparkinson.org;
        root /var/www/html;

        ssl_certificate /etc/ssl/certs/wikiparkinson.org.crt;
        ssl_certificate_key /etc/ssl/private/wikiparkinson.org.key;

        ssl_trusted_certificate /etc/ssl/certs/StartSSL.crt;

        location / {
		return 301 https://wikiparkinson.org$request_uri;
	}
}


<% @sslcerts.each_pair do | name, property | -%>
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name <%= property['url'] %>;
	root /var/www/html;

	ssl_certificate /etc/ssl/certs/<%= property['url'] %>.crt;
	ssl_certificate_key /etc/ssl/private/<%= property['url'] %>.key;

	ssl_trusted_certificate /etc/ssl/certs/<%= property['ca'] %>.crt;

	location / {
		proxy_pass http://127.0.0.1:81;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}
}
<% end -%>
